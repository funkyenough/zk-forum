{
  "address": "0x17727C9112c1b2c8bFf7361Df02096Ce3d117e35",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "coordinateId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "y",
          "type": "uint256"
        }
      ],
      "name": "CoordinateCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newFee",
          "type": "uint256"
        }
      ],
      "name": "changeEntranceFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "changeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gameId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_y",
          "type": "uint256"
        }
      ],
      "name": "createCoordinate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_treasureHash",
          "type": "uint256"
        }
      ],
      "name": "createGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gameId",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "entranceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gameId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "coordinateId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "y",
              "type": "uint256"
            }
          ],
          "internalType": "struct zkTreasure.Coordinate",
          "name": "_treasureCoordinate",
          "type": "tuple"
        }
      ],
      "name": "finishGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gameId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "coordinateId",
          "type": "uint256"
        }
      ],
      "name": "fraudProofCheck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "games",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "startAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isOver",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "closestPlayer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "closestDistance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDeposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "treasureHash",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "coordinateId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "y",
              "type": "uint256"
            }
          ],
          "internalType": "struct zkTreasure.Coordinate",
          "name": "treasureCoordinate",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "treasureCoordinateVerified",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gameId",
          "type": "uint256"
        }
      ],
      "name": "getCoordinate",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "coordinateId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "y",
              "type": "uint256"
            }
          ],
          "internalType": "struct zkTreasure.Coordinate[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gameId",
          "type": "uint256"
        }
      ],
      "name": "getGame",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "startAt",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "players",
              "type": "address[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "coordinateId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "player",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "x",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct zkTreasure.Coordinate[]",
              "name": "coordinates",
              "type": "tuple[]"
            },
            {
              "internalType": "bool",
              "name": "isOver",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "closestPlayer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "closestDistance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalDeposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "treasureHash",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "coordinateId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "player",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "x",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct zkTreasure.Coordinate",
              "name": "treasureCoordinate",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "treasureCoordinateVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct zkTreasure.Game",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextCoordinateId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextGameId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gameId",
          "type": "uint256"
        }
      ],
      "name": "setWinner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gameId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "coordinateId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "player",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "y",
              "type": "uint256"
            }
          ],
          "internalType": "struct zkTreasure.Coordinate",
          "name": "_treasureCoordinate",
          "type": "tuple"
        }
      ],
      "name": "verifyTreasureCoordinate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gameId",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1d14b1b6e68655976dba9a8f6b5d626079e7e2cb03339e049295c9e7d792982f",
  "receipt": {
    "to": null,
    "from": "0x150f4f0A12dA2fC8aEEbE377ba835e97754700E0",
    "contractAddress": "0x17727C9112c1b2c8bFf7361Df02096Ce3d117e35",
    "transactionIndex": 51,
    "gasUsed": "1681215",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x2fa5dae14a66d301fa7a099824cbafec3ec18dc77229566419c9074e7d6ba09a",
    "transactionHash": "0x1d14b1b6e68655976dba9a8f6b5d626079e7e2cb03339e049295c9e7d792982f",
    "logs": [],
    "blockNumber": 6563912,
    "cumulativeGasUsed": "10393136",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "e3fe89f862abb1b287d6cc8560bf09c8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"coordinateId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"CoordinateCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"changeEntranceFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gameId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_y\",\"type\":\"uint256\"}],\"name\":\"createCoordinate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_treasureHash\",\"type\":\"uint256\"}],\"name\":\"createGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gameId\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entranceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gameId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"coordinateId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct zkTreasure.Coordinate\",\"name\":\"_treasureCoordinate\",\"type\":\"tuple\"}],\"name\":\"finishGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gameId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coordinateId\",\"type\":\"uint256\"}],\"name\":\"fraudProofCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"games\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isOver\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"closestPlayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"closestDistance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"treasureHash\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"coordinateId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct zkTreasure.Coordinate\",\"name\":\"treasureCoordinate\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"treasureCoordinateVerified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gameId\",\"type\":\"uint256\"}],\"name\":\"getCoordinate\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"coordinateId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct zkTreasure.Coordinate[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gameId\",\"type\":\"uint256\"}],\"name\":\"getGame\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"players\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"coordinateId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct zkTreasure.Coordinate[]\",\"name\":\"coordinates\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"isOver\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"closestPlayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"closestDistance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"treasureHash\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"coordinateId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct zkTreasure.Coordinate\",\"name\":\"treasureCoordinate\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"treasureCoordinateVerified\",\"type\":\"bool\"}],\"internalType\":\"struct zkTreasure.Game\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextCoordinateId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextGameId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gameId\",\"type\":\"uint256\"}],\"name\":\"setWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gameId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"coordinateId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"internalType\":\"struct zkTreasure.Coordinate\",\"name\":\"_treasureCoordinate\",\"type\":\"tuple\"}],\"name\":\"verifyTreasureCoordinate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gameId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Coordinate.sol\":\"zkTreasure\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Coordinate.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.20;\\n\\nimport \\\"./PoseidonT3.sol\\\";\\n\\ncontract zkTreasure {\\n\\n    struct Coordinate {\\n        uint256 coordinateId;\\n        address player;\\n        uint256 x;\\n        uint256 y;\\n    }\\n\\n    struct Game {\\n        string name;\\n        string description;\\n        uint256 startAt;\\n        uint256 duration;\\n        address [] players;\\n        Coordinate[] coordinates;\\n        bool isOver;\\n        address closestPlayer;\\n        uint256 closestDistance;\\n        uint256 totalDeposit;\\n        uint256 treasureHash;\\n        Coordinate treasureCoordinate;\\n        bool treasureCoordinateVerified;\\n    }\\n\\n    Game[] public games;\\n\\n    uint256 public nextGameId;\\n    uint256 public nextCoordinateId;\\n    address public owner;\\n    uint256 public entranceFee;\\n\\n    event CoordinateCreated(uint256 coordinateId, address player, uint256 x, uint256 y);\\n\\n    constructor() {\\n        owner = msg.sender;\\n        entranceFee = 0.05 ether;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"not authorized\\\");\\n        _;\\n    }\\n\\n    // modifier checkGameId(uint256 _gameId) {\\n    //     require(games[_gameId].length > 0, \\\"Game does not exist\\\");\\n    //     _;\\n    // }\\n\\n    function changeOwner(address _newOwner) external onlyOwner { // Change the owner\\n        owner = _newOwner;\\n    }\\n\\n    function changeEntranceFee(uint256 _newFee) external onlyOwner { // Change the entrance fee\\n        for (uint i = 0; i < games.length; i++) { // Check if there are still players in the game\\n            require(games[i].totalDeposit == 0, \\\"There are still players in the game\\\");\\n        }\\n        entranceFee = _newFee; // If not, change the entrance fee\\n    }\\n\\n    function createGame(string memory _name, string memory _description, uint256 _duration, uint256 _treasureHash) external onlyOwner {\\n        // Create a new game\\n        uint256 gameId = nextGameId;\\n        games.push(); // This creates a new empty Game struct in storage\\n        Game storage newGame = games[gameId];\\n\\n        newGame.name = _name;\\n        newGame.description = _description;\\n        newGame.startAt = block.timestamp;\\n        newGame.duration = _duration;\\n        newGame.isOver = false;\\n        newGame.closestPlayer = address(0);\\n        newGame.closestDistance = type(uint256).max;\\n        newGame.totalDeposit = 0;\\n        newGame.treasureHash = _treasureHash;\\n        newGame.treasureCoordinateVerified = false;\\n\\n        // Initialize the treasureCoordinate\\n        newGame.treasureCoordinate = Coordinate({\\n            coordinateId: 0,\\n            player: address(0),\\n            x: 0,\\n            y: 0\\n        });\\n\\n        nextGameId++;\\n    }\\n\\n    function getGame(uint256 _gameId) public view returns (Game memory) { // Get a game\\n        return games[_gameId];\\n    }\\n\\n    function finishGame(uint256 _gameId, Coordinate memory _treasureCoordinate) onlyOwner external { // Finish the game\\n        assert(games[_gameId].isOver == false);\\n        assert(games[_gameId].startAt + games[_gameId].duration <= block.timestamp);\\n        games[_gameId].treasureCoordinate = _treasureCoordinate;\\n        games[_gameId].isOver = true;\\n    }\\n\\n    function createCoordinate(uint256 _gameId, uint256 _x, uint256 _y) external  { // Create a new coordinate\\n        assert(games[_gameId].isOver == false); // The game should be ongoing\\n        assert(games[_gameId].startAt != 0);\\n        // TODO player should belong to a game\\n        uint256 coordinateId = nextCoordinateId;\\n        Coordinate memory newCoordinate = Coordinate(coordinateId, msg.sender, _x, _y);\\n        games[_gameId].coordinates.push(newCoordinate);\\n        emit CoordinateCreated(coordinateId, msg.sender, _x, _y);\\n        nextCoordinateId++;\\n    }\\n\\n    function getCoordinate(uint256 _gameId) public view returns (Coordinate[] memory) { // Get all coordinates of a game\\n        return games[_gameId].coordinates;\\n    }\\n\\n    function verifyTreasureCoordinate(uint256 _gameId, Coordinate memory _treasureCoordinate) external { // Verify the treasure coordinate\\n        require(games[_gameId].isOver == true, \\\"The game should be over\\\");\\n        require(games[_gameId].treasureCoordinateVerified == false, \\\"The treasure coordinate is already verified\\\");\\n        // require(games[_gameId].treasureHash == PoseidonT3.hash([_treasureCoordinate.x, _treasureCoordinate.y]), \\\"The treasure coordinate is wrong\\\");\\n        games[_gameId].treasureCoordinateVerified = true;\\n    }\\n\\n    function deposit(uint _gameId) external payable { // Deposit the entrance fee\\n        require(msg.value >= entranceFee, \\\"The amount shoud be more than entranceFee.\\\");\\n        games[_gameId].players.push(msg.sender);\\n        games[_gameId].totalDeposit += msg.value;\\n    }\\n\\n    function withdraw(uint256 _gameId) public onlyOwner payable { // Send rewards to the winner\\n        (bool success, ) = games[_gameId].closestPlayer.call{value: games[_gameId].totalDeposit}(\\\"\\\");\\n        require(success, \\\"Failed to send Rewards\\\");\\n    }\\n\\n    function sqrt(uint x) internal pure returns (uint y) {\\n        uint z = (x + 1) / 2;\\n        y = x;\\n        while (z < y) {\\n            y = z;\\n            z = (x / z + z) / 2;\\n        }\\n    }\\n\\n    function fraudProofCheck(uint256 _gameId, uint256 coordinateId) external { // Check if a player is cheating\\n        // Here we check if the player is the closest to the treasure\\n        require(games[_gameId].treasureCoordinateVerified == true, \\\"The treasure coordinate is not verified\\\");\\n\\n        uint256 inputX = games[_gameId].coordinates[coordinateId].x;\\n        uint256 inputY = games[_gameId].coordinates[coordinateId].y;\\n        uint256 treasureX = games[_gameId].treasureCoordinate.x;\\n        uint256 treasureY = games[_gameId].treasureCoordinate.y;\\n        uint256 distance = sqrt((inputX - treasureX) ** 2 + (inputY - treasureY) ** 2);\\n        if(distance < distance) {\\n            games[_gameId].closestPlayer = msg.sender;\\n            games[_gameId].closestDistance = distance;\\n        }\\n    }\\n\\n    function setWinner(uint256 _gameId) external onlyOwner () { // Set the winner\\n        // Here we compute the winner\\n        assert(games[_gameId].isOver == true); // The game should be over\\n        //fraudProofCheck();\\n        withdraw(_gameId);\\n    }\\n}\",\"keccak256\":\"0x617a6925049a7e89b24f48dba9f1d309a48c0bc1d80d266251dee895c55a9a89\",\"license\":\"UNLICENSED\"},\"contracts/PoseidonT3.sol\":{\"content\":\"// /// SPDX-License-Identifier: MIT\\n// pragma solidity ^0.8.20;\\n\\n\\n// // This library is borrowed manually from https://github.com/chancehudson/poseidon-solidity/tree/main, since the npm package is not maintained.\\n// library PoseidonT3 {\\n//   uint constant M00 = 0x109b7f411ba0e4c9b2b70caf5c36a7b194be7c11ad24378bfedb68592ba8118b;\\n//   uint constant M01 = 0x2969f27eed31a480b9c36c764379dbca2cc8fdd1415c3dded62940bcde0bd771;\\n//   uint constant M02 = 0x143021ec686a3f330d5f9e654638065ce6cd79e28c5b3753326244ee65a1b1a7;\\n//   uint constant M10 = 0x16ed41e13bb9c0c66ae119424fddbcbc9314dc9fdbdeea55d6c64543dc4903e0;\\n//   uint constant M11 = 0x2e2419f9ec02ec394c9871c832963dc1b89d743c8c7b964029b2311687b1fe23;\\n//   uint constant M12 = 0x176cc029695ad02582a70eff08a6fd99d057e12e58e7d7b6b16cdfabc8ee2911;\\n\\n//   // See here for a simplified implementation: https://github.com/vimwitch/poseidon-solidity/blob/e57becdabb65d99fdc586fe1e1e09e7108202d53/contracts/Poseidon.sol#L40\\n//   // Inspired by: https://github.com/iden3/circomlibjs/blob/v0.0.8/src/poseidon_slow.js\\n//   function hash(uint[2] memory) public pure returns (uint) {\\n//     assembly {\\n//       let F := 21888242871839275222246405745257275088548364400416034343698204186575808495617\\n//       let M20 := 0x2b90bba00fca0589f617e7dcbfe82e0df706ab640ceb247b791a93b74e36736d\\n//       let M21 := 0x101071f0032379b697315876690f053d148d4e109f5fb065c8aacc55a0f89bfa\\n//       let M22 := 0x19a3fc0a56702bf417ba7fee3802593fa644470307043f7773279cd71d25d5e0\\n\\n//       // load the inputs from memory\\n//       let state1 := add(mod(mload(0x80), F), 0x00f1445235f2148c5986587169fc1bcd887b08d4d00868df5696fff40956e864)\\n//       let state2 := add(mod(mload(0xa0), F), 0x08dff3487e8ac99e1f29a058d0fa80b930c728730b7ab36ce879f3890ecf73f5)\\n//       let scratch0 := mulmod(state1, state1, F)\\n//       state1 := mulmod(mulmod(scratch0, scratch0, F), state1, F)\\n//       scratch0 := mulmod(state2, state2, F)\\n//       state2 := mulmod(mulmod(scratch0, scratch0, F), state2, F)\\n//       scratch0 := add(\\n//         0x2f27be690fdaee46c3ce28f7532b13c856c35342c84bda6e20966310fadc01d0,\\n//         add(add(15452833169820924772166449970675545095234312153403844297388521437673434406763, mulmod(state1, M10, F)), mulmod(state2, M20, F))\\n//       )\\n//       let scratch1 := add(\\n//         0x2b2ae1acf68b7b8d2416bebf3d4f6234b763fe04b8043ee48b8327bebca16cf2,\\n//         add(add(18674271267752038776579386132900109523609358935013267566297499497165104279117, mulmod(state1, M11, F)), mulmod(state2, M21, F))\\n//       )\\n//       let scratch2 := add(\\n//         0x0319d062072bef7ecca5eac06f97d4d55952c175ab6b03eae64b44c7dbf11cfa,\\n//         add(add(14817777843080276494683266178512808687156649753153012854386334860566696099579, mulmod(state1, M12, F)), mulmod(state2, M22, F))\\n//       )\\n//       let state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := mulmod(scratch1, scratch1, F)\\n//       scratch1 := mulmod(mulmod(state0, state0, F), scratch1, F)\\n//       state0 := mulmod(scratch2, scratch2, F)\\n//       scratch2 := mulmod(mulmod(state0, state0, F), scratch2, F)\\n//       state0 := add(0x28813dcaebaeaa828a376df87af4a63bc8b7bf27ad49c6298ef7b387bf28526d, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x2727673b2ccbc903f181bf38e1c1d40d2033865200c352bc150928adddf9cb78, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x234ec45ca27727c2e74abd2b2a1494cd6efbd43e340587d6b8fb9e31e65cc632, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := mulmod(state1, state1, F)\\n//       state1 := mulmod(mulmod(scratch0, scratch0, F), state1, F)\\n//       scratch0 := mulmod(state2, state2, F)\\n//       state2 := mulmod(mulmod(scratch0, scratch0, F), state2, F)\\n//       scratch0 := add(0x15b52534031ae18f7f862cb2cf7cf760ab10a8150a337b1ccd99ff6e8797d428, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x0dc8fad6d9e4b35f5ed9a3d186b79ce38e0e8a8d1b58b132d701d4eecf68d1f6, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x1bcd95ffc211fbca600f705fad3fb567ea4eb378f62e1fec97805518a47e4d9c, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := mulmod(scratch1, scratch1, F)\\n//       scratch1 := mulmod(mulmod(state0, state0, F), scratch1, F)\\n//       state0 := mulmod(scratch2, scratch2, F)\\n//       scratch2 := mulmod(mulmod(state0, state0, F), scratch2, F)\\n//       state0 := add(0x10520b0ab721cadfe9eff81b016fc34dc76da36c2578937817cb978d069de559, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x1f6d48149b8e7f7d9b257d8ed5fbbaf42932498075fed0ace88a9eb81f5627f6, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x1d9655f652309014d29e00ef35a2089bfff8dc1c816f0dc9ca34bdb5460c8705, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x04df5a56ff95bcafb051f7b1cd43a99ba731ff67e47032058fe3d4185697cc7d, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x0672d995f8fff640151b3d290cedaf148690a10a8c8424a7f6ec282b6e4be828, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x099952b414884454b21200d7ffafdd5f0c9a9dcc06f2708e9fc1d8209b5c75b9, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x052cba2255dfd00c7c483143ba8d469448e43586a9b4cd9183fd0e843a6b9fa6, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x0b8badee690adb8eb0bd74712b7999af82de55707251ad7716077cb93c464ddc, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x119b1590f13307af5a1ee651020c07c749c15d60683a8050b963d0a8e4b2bdd1, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x03150b7cd6d5d17b2529d36be0f67b832c4acfc884ef4ee5ce15be0bfb4a8d09, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x2cc6182c5e14546e3cf1951f173912355374efb83d80898abe69cb317c9ea565, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x005032551e6378c450cfe129a404b3764218cadedac14e2b92d2cd73111bf0f9, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x233237e3289baa34bb147e972ebcb9516469c399fcc069fb88f9da2cc28276b5, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x05c8f4f4ebd4a6e3c980d31674bfbe6323037f21b34ae5a4e80c2d4c24d60280, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x0a7b1db13042d396ba05d818a319f25252bcf35ef3aeed91ee1f09b2590fc65b, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x2a73b71f9b210cf5b14296572c9d32dbf156e2b086ff47dc5df542365a404ec0, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x1ac9b0417abcc9a1935107e9ffc91dc3ec18f2c4dbe7f22976a760bb5c50c460, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x12c0339ae08374823fabb076707ef479269f3e4d6cb104349015ee046dc93fc0, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x0b7475b102a165ad7f5b18db4e1e704f52900aa3253baac68246682e56e9a28e, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x037c2849e191ca3edb1c5e49f6e8b8917c843e379366f2ea32ab3aa88d7f8448, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x05a6811f8556f014e92674661e217e9bd5206c5c93a07dc145fdb176a716346f, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x29a795e7d98028946e947b75d54e9f044076e87a7b2883b47b675ef5f38bd66e, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x20439a0c84b322eb45a3857afc18f5826e8c7382c8a1585c507be199981fd22f, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x2e0ba8d94d9ecf4a94ec2050c7371ff1bb50f27799a84b6d4a2a6f2a0982c887, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x143fd115ce08fb27ca38eb7cce822b4517822cd2109048d2e6d0ddcca17d71c8, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x0c64cbecb1c734b857968dbbdcf813cdf8611659323dbcbfc84323623be9caf1, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x028a305847c683f646fca925c163ff5ae74f348d62c2b670f1426cef9403da53, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x2e4ef510ff0b6fda5fa940ab4c4380f26a6bcb64d89427b824d6755b5db9e30c, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x0081c95bc43384e663d79270c956ce3b8925b4f6d033b078b96384f50579400e, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x2ed5f0c91cbd9749187e2fade687e05ee2491b349c039a0bba8a9f4023a0bb38, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x30509991f88da3504bbf374ed5aae2f03448a22c76234c8c990f01f33a735206, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x1c3f20fd55409a53221b7c4d49a356b9f0a1119fb2067b41a7529094424ec6ad, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x10b4e7f3ab5df003049514459b6e18eec46bb2213e8e131e170887b47ddcb96c, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x2a1982979c3ff7f43ddd543d891c2abddd80f804c077d775039aa3502e43adef, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x1c74ee64f15e1db6feddbead56d6d55dba431ebc396c9af95cad0f1315bd5c91, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x07533ec850ba7f98eab9303cace01b4b9e4f2e8b82708cfa9c2fe45a0ae146a0, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x21576b438e500449a151e4eeaf17b154285c68f42d42c1808a11abf3764c0750, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x2f17c0559b8fe79608ad5ca193d62f10bce8384c815f0906743d6930836d4a9e, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x2d477e3862d07708a79e8aae946170bc9775a4201318474ae665b0b1b7e2730e, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x162f5243967064c390e095577984f291afba2266c38f5abcd89be0f5b2747eab, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x2b4cb233ede9ba48264ecd2c8ae50d1ad7a8596a87f29f8a7777a70092393311, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x2c8fbcb2dd8573dc1dbaf8f4622854776db2eece6d85c4cf4254e7c35e03b07a, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x1d6f347725e4816af2ff453f0cd56b199e1b61e9f601e9ade5e88db870949da9, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x204b0c397f4ebe71ebc2d8b3df5b913df9e6ac02b68d31324cd49af5c4565529, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x0c4cb9dc3c4fd8174f1149b3c63c3c2f9ecb827cd7dc25534ff8fb75bc79c502, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x174ad61a1448c899a25416474f4930301e5c49475279e0639a616ddc45bc7b54, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x1a96177bcf4d8d89f759df4ec2f3cde2eaaa28c177cc0fa13a9816d49a38d2ef, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x066d04b24331d71cd0ef8054bc60c4ff05202c126a233c1a8242ace360b8a30a, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x2a4c4fc6ec0b0cf52195782871c6dd3b381cc65f72e02ad527037a62aa1bd804, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x13ab2d136ccf37d447e9f2e14a7cedc95e727f8446f6d9d7e55afc01219fd649, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x1121552fca26061619d24d843dc82769c1b04fcec26f55194c2e3e869acc6a9a, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x00ef653322b13d6c889bc81715c37d77a6cd267d595c4a8909a5546c7c97cff1, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x0e25483e45a665208b261d8ba74051e6400c776d652595d9845aca35d8a397d3, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x29f536dcb9dd7682245264659e15d88e395ac3d4dde92d8c46448db979eeba89, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x2a56ef9f2c53febadfda33575dbdbd885a124e2780bbea170e456baace0fa5be, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x1c8361c78eb5cf5decfb7a2d17b5c409f2ae2999a46762e8ee416240a8cb9af1, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x151aff5f38b20a0fc0473089aaf0206b83e8e68a764507bfd3d0ab4be74319c5, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x04c6187e41ed881dc1b239c88f7f9d43a9f52fc8c8b6cdd1e76e47615b51f100, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x13b37bd80f4d27fb10d84331f6fb6d534b81c61ed15776449e801b7ddc9c2967, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x01a5c536273c2d9df578bfbd32c17b7a2ce3664c2a52032c9321ceb1c4e8a8e4, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x2ab3561834ca73835ad05f5d7acb950b4a9a2c666b9726da832239065b7c3b02, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x1d4d8ec291e720db200fe6d686c0d613acaf6af4e95d3bf69f7ed516a597b646, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x041294d2cc484d228f5784fe7919fd2bb925351240a04b711514c9c80b65af1d, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x154ac98e01708c611c4fa715991f004898f57939d126e392042971dd90e81fc6, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x0b339d8acca7d4f83eedd84093aef51050b3684c88f8b0b04524563bc6ea4da4, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x0955e49e6610c94254a4f84cfbab344598f0e71eaff4a7dd81ed95b50839c82e, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x06746a6156eba54426b9e22206f15abca9a6f41e6f535c6f3525401ea0654626, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x0f18f5a0ecd1423c496f3820c549c27838e5790e2bd0a196ac917c7ff32077fb, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x04f6eeca1751f7308ac59eff5beb261e4bb563583ede7bc92a738223d6f76e13, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x2b56973364c4c4f5c1a3ec4da3cdce038811eb116fb3e45bc1768d26fc0b3758, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x123769dd49d5b054dcd76b89804b1bcb8e1392b385716a5d83feb65d437f29ef, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x2147b424fc48c80a88ee52b91169aacea989f6446471150994257b2fb01c63e9, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x0fdc1f58548b85701a6c5505ea332a29647e6f34ad4243c2ea54ad897cebe54d, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x12373a8251fea004df68abcf0f7786d4bceff28c5dbbe0c3944f685cc0a0b1f2, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x21e4f4ea5f35f85bad7ea52ff742c9e8a642756b6af44203dd8a1f35c1a90035, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x16243916d69d2ca3dfb4722224d4c462b57366492f45e90d8a81934f1bc3b147, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x1efbe46dd7a578b4f66f9adbc88b4378abc21566e1a0453ca13a4159cac04ac2, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x07ea5e8537cf5dd08886020e23a7f387d468d5525be66f853b672cc96a88969a, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x05a8c4f9968b8aa3b7b478a30f9a5b63650f19a75e7ce11ca9fe16c0b76c00bc, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x20f057712cc21654fbfe59bd345e8dac3f7818c701b9c7882d9d57b72a32e83f, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x04a12ededa9dfd689672f8c67fee31636dcd8e88d01d49019bd90b33eb33db69, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x27e88d8c15f37dcee44f1e5425a51decbd136ce5091a6767e49ec9544ccd101a, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x2feed17b84285ed9b8a5c8c5e95a41f66e096619a7703223176c41ee433de4d1, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x1ed7cc76edf45c7c404241420f729cf394e5942911312a0d6972b8bd53aff2b8, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x15742e99b9bfa323157ff8c586f5660eac6783476144cdcadf2874be45466b1a, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x1aac285387f65e82c895fc6887ddf40577107454c6ec0317284f033f27d0c785, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x25851c3c845d4790f9ddadbdb6057357832e2e7a49775f71ec75a96554d67c77, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x15a5821565cc2ec2ce78457db197edf353b7ebba2c5523370ddccc3d9f146a67, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x2411d57a4813b9980efa7e31a1db5966dcf64f36044277502f15485f28c71727, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x002e6f8d6520cd4713e335b8c0b6d2e647e9a98e12f4cd2558828b5ef6cb4c9b, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x2ff7bc8f4380cde997da00b616b0fcd1af8f0e91e2fe1ed7398834609e0315d2, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x00b9831b948525595ee02724471bcd182e9521f6b7bb68f1e93be4febb0d3cbe, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x0a2f53768b8ebf6a86913b0e57c04e011ca408648a4743a87d77adbf0c9c3512, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x00248156142fd0373a479f91ff239e960f599ff7e94be69b7f2a290305e1198d, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x171d5620b87bfb1328cf8c02ab3f0c9a397196aa6a542c2350eb512a2b2bcda9, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x170a4f55536f7dc970087c7c10d6fad760c952172dd54dd99d1045e4ec34a808, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x29aba33f799fe66c2ef3134aea04336ecc37e38c1cd211ba482eca17e2dbfae1, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x1e9bc179a4fdd758fdd1bb1945088d47e70d114a03f6a0e8b5ba650369e64973, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x1dd269799b660fad58f7f4892dfb0b5afeaad869a9c4b44f9c9e1c43bdaf8f09, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x22cdbc8b70117ad1401181d02e15459e7ccd426fe869c7c95d1dd2cb0f24af38, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x0ef042e454771c533a9f57a55c503fcefd3150f52ed94a7cd5ba93b9c7dacefd, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x11609e06ad6c8fe2f287f3036037e8851318e8b08a0359a03b304ffca62e8284, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x1166d9e554616dba9e753eea427c17b7fecd58c076dfe42708b08f5b783aa9af, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x2de52989431a859593413026354413db177fbf4cd2ac0b56f855a888357ee466, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x3006eb4ffc7a85819a6da492f3a8ac1df51aee5b17b8e89d74bf01cf5f71e9ad, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x2af41fbb61ba8a80fdcf6fff9e3f6f422993fe8f0a4639f962344c8225145086, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x119e684de476155fe5a6b41a8ebc85db8718ab27889e85e781b214bace4827c3, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x1835b786e2e8925e188bea59ae363537b51248c23828f047cff784b97b3fd800, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x28201a34c594dfa34d794996c6433a20d152bac2a7905c926c40e285ab32eeb6, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x083efd7a27d1751094e80fefaf78b000864c82eb571187724a761f88c22cc4e7, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x0b6f88a3577199526158e61ceea27be811c16df7774dd8519e079564f61fd13b, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x0ec868e6d15e51d9644f66e1d6471a94589511ca00d29e1014390e6ee4254f5b, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x2af33e3f866771271ac0c9b3ed2e1142ecd3e74b939cd40d00d937ab84c98591, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x0b520211f904b5e7d09b5d961c6ace7734568c547dd6858b364ce5e47951f178, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x0b2d722d0919a1aad8db58f10062a92ea0c56ac4270e822cca228620188a1d40, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x1f790d4d7f8cf094d980ceb37c2453e957b54a9991ca38bbe0061d1ed6e562d4, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x0171eb95dfbf7d1eaea97cd385f780150885c16235a2a6a8da92ceb01e504233, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x0c2d0e3b5fd57549329bf6885da66b9b790b40defd2c8650762305381b168873, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x1162fb28689c27154e5a8228b4e72b377cbcafa589e283c35d3803054407a18d, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x2f1459b65dee441b64ad386a91e8310f282c5a92a89e19921623ef8249711bc0, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x1e6ff3216b688c3d996d74367d5cd4c1bc489d46754eb712c243f70d1b53cfbb, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x01ca8be73832b8d0681487d27d157802d741a6f36cdc2a0576881f9326478875, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x1f7735706ffe9fc586f976d5bdf223dc680286080b10cea00b9b5de315f9650e, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x2522b60f4ea3307640a0c2dce041fba921ac10a3d5f096ef4745ca838285f019, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x23f0bee001b1029d5255075ddc957f833418cad4f52b6c3f8ce16c235572575b, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x2bc1ae8b8ddbb81fcaac2d44555ed5685d142633e9df905f66d9401093082d59, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x0f9406b8296564a37304507b8dba3ed162371273a07b1fc98011fcd6ad72205f, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x2360a8eb0cc7defa67b72998de90714e17e75b174a52ee4acb126c8cd995f0a8, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x15871a5cddead976804c803cbaef255eb4815a5e96df8b006dcbbc2767f88948, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x193a56766998ee9e0a8652dd2f3b1da0362f4f54f72379544f957ccdeefb420f, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x2a394a43934f86982f9be56ff4fab1703b2e63c8ad334834e4309805e777ae0f, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x1859954cfeb8695f3e8b635dcb345192892cd11223443ba7b4166e8876c0d142, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x04e1181763050e58013444dbcb99f1902b11bc25d90bbdca408d3819f4fed32b, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x0fdb253dee83869d40c335ea64de8c5bb10eb82db08b5e8b1f5e5552bfd05f23, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x058cbe8a9a5027bdaa4efb623adead6275f08686f1c08984a9d7c5bae9b4f1c0, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x1382edce9971e186497eadb1aeb1f52b23b4b83bef023ab0d15228b4cceca59a, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x03464990f045c6ee0819ca51fd11b0be7f61b8eb99f14b77e1e6634601d9e8b5, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x23f7bfc8720dc296fff33b41f98ff83c6fcab4605db2eb5aaa5bc137aeb70a58, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x0a59a158e3eec2117e6e94e7f0e9decf18c3ffd5e1531a9219636158bbaf62f2, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x06ec54c80381c052b58bf23b312ffd3ce2c4eba065420af8f4c23ed0075fd07b, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x118872dc832e0eb5476b56648e867ec8b09340f7a7bcb1b4962f0ff9ed1f9d01, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x13d69fa127d834165ad5c7cba7ad59ed52e0b0f0e42d7fea95e1906b520921b1, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x169a177f63ea681270b1c6877a73d21bde143942fb71dc55fd8a49f19f10c77b, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x04ef51591c6ead97ef42f287adce40d93abeb032b922f66ffb7e9a5a7450544d, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x256e175a1dc079390ecd7ca703fb2e3b19ec61805d4f03ced5f45ee6dd0f69ec, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x30102d28636abd5fe5f2af412ff6004f75cc360d3205dd2da002813d3e2ceeb2, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x10998e42dfcd3bbf1c0714bc73eb1bf40443a3fa99bef4a31fd31be182fcc792, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x193edd8e9fcf3d7625fa7d24b598a1d89f3362eaf4d582efecad76f879e36860, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x18168afd34f2d915d0368ce80b7b3347d1c7a561ce611425f2664d7aa51f0b5d, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x29383c01ebd3b6ab0c017656ebe658b6a328ec77bc33626e29e2e95b33ea6111, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x10646d2f2603de39a1f4ae5e7771a64a702db6e86fb76ab600bf573f9010c711, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x0beb5e07d1b27145f575f1395a55bf132f90c25b40da7b3864d0242dcb1117fb, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x16d685252078c133dc0d3ecad62b5c8830f95bb2e54b59abdffbf018d96fa336, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x0a6abd1d833938f33c74154e0404b4b40a555bbbec21ddfafd672dd62047f01a, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x1a679f5d36eb7b5c8ea12a4c2dedc8feb12dffeec450317270a6f19b34cf1860, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x0980fb233bd456c23974d50e0ebfde4726a423eada4e8f6ffbc7592e3f1b93d6, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x161b42232e61b84cbf1810af93a38fc0cece3d5628c9282003ebacb5c312c72b, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x0ada10a90c7f0520950f7d47a60d5e6a493f09787f1564e5d09203db47de1a0b, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x1a730d372310ba82320345a29ac4238ed3f07a8a2b4e121bb50ddb9af407f451, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x2c8120f268ef054f817064c369dda7ea908377feaba5c4dffbda10ef58e8c556, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x1c7c8824f758753fa57c00789c684217b930e95313bcb73e6e7b8649a4968f70, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x2cd9ed31f5f8691c8e39e4077a74faa0f400ad8b491eb3f7b47b27fa3fd1cf77, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x23ff4f9d46813457cf60d92f57618399a5e022ac321ca550854ae23918a22eea, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x09945a5d147a4f66ceece6405dddd9d0af5a2c5103529407dff1ea58f180426d, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x188d9c528025d4c2b67660c6b771b90f7c7da6eaa29d3f268a6dd223ec6fc630, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x3050e37996596b7f81f68311431d8734dba7d926d3633595e0c0d8ddf4f0f47f, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x15af1169396830a91600ca8102c35c426ceae5461e3f95d89d829518d30afd78, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x1da6d09885432ea9a06d9f37f873d985dae933e351466b2904284da3320d8acc, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := add(0x2796ea90d269af29f5f8acf33921124e4e4fad3dbe658945e546ee411ddaa9cb, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x202d7dd1da0f6b4b0325c8b3307742f01e15612ec8e9304a7cb0319e01d32d60, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x096d6790d05bb759156a952ba263d672a2d7f9c788f4c831a29dace4c0f8be5f, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := add(0x054efa1f65b0fce283808965275d877b438da23ce5b13e1963798cb1447d25a4, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x1b162f83d917e93edb3308c29802deb9d8aa690113b2e14864ccf6e18e4165f1, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x21e5241e12564dd6fd9f1cdd2a0de39eedfefc1466cc568ec5ceb745a0506edc, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := mulmod(scratch1, scratch1, F)\\n//       scratch1 := mulmod(mulmod(state0, state0, F), scratch1, F)\\n//       state0 := mulmod(scratch2, scratch2, F)\\n//       scratch2 := mulmod(mulmod(state0, state0, F), scratch2, F)\\n//       state0 := add(0x1cfb5662e8cf5ac9226a80ee17b36abecb73ab5f87e161927b4349e10e4bdf08, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x0f21177e302a771bbae6d8d1ecb373b62c99af346220ac0129c53f666eb24100, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x1671522374606992affb0dd7f71b12bec4236aede6290546bcef7e1f515c2320, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := mulmod(state1, state1, F)\\n//       state1 := mulmod(mulmod(scratch0, scratch0, F), state1, F)\\n//       scratch0 := mulmod(state2, state2, F)\\n//       state2 := mulmod(mulmod(scratch0, scratch0, F), state2, F)\\n//       scratch0 := add(0x0fa3ec5b9488259c2eb4cf24501bfad9be2ec9e42c5cc8ccd419d2a692cad870, add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)))\\n//       scratch1 := add(0x193c0e04e0bd298357cb266c1506080ed36edce85c648cc085e8c57b1ab54bba, add(add(mulmod(state0, M01, F), mulmod(state1, M11, F)), mulmod(state2, M21, F)))\\n//       scratch2 := add(0x102adf8ef74735a27e9128306dcbc3c99f6f7291cd406578ce14ea2adaba68f8, add(add(mulmod(state0, M02, F), mulmod(state1, M12, F)), mulmod(state2, M22, F)))\\n//       state0 := mulmod(scratch0, scratch0, F)\\n//       scratch0 := mulmod(mulmod(state0, state0, F), scratch0, F)\\n//       state0 := mulmod(scratch1, scratch1, F)\\n//       scratch1 := mulmod(mulmod(state0, state0, F), scratch1, F)\\n//       state0 := mulmod(scratch2, scratch2, F)\\n//       scratch2 := mulmod(mulmod(state0, state0, F), scratch2, F)\\n//       state0 := add(0x0fe0af7858e49859e2a54d6f1ad945b1316aa24bfbdd23ae40a6d0cb70c3eab1, add(add(mulmod(scratch0, M00, F), mulmod(scratch1, M10, F)), mulmod(scratch2, M20, F)))\\n//       state1 := add(0x216f6717bbc7dedb08536a2220843f4e2da5f1daa9ebdefde8a5ea7344798d22, add(add(mulmod(scratch0, M01, F), mulmod(scratch1, M11, F)), mulmod(scratch2, M21, F)))\\n//       state2 := add(0x1da55cc900f0d21f4a3e694391918a1b3c23b2ac773c6b3ef88e2e4228325161, add(add(mulmod(scratch0, M02, F), mulmod(scratch1, M12, F)), mulmod(scratch2, M22, F)))\\n//       scratch0 := mulmod(state0, state0, F)\\n//       state0 := mulmod(mulmod(scratch0, scratch0, F), state0, F)\\n//       scratch0 := mulmod(state1, state1, F)\\n//       state1 := mulmod(mulmod(scratch0, scratch0, F), state1, F)\\n//       scratch0 := mulmod(state2, state2, F)\\n//       state2 := mulmod(mulmod(scratch0, scratch0, F), state2, F)\\n\\n//       mstore(0x0, mod(add(add(mulmod(state0, M00, F), mulmod(state1, M10, F)), mulmod(state2, M20, F)), F))\\n\\n//       return(0, 0x20)\\n//     }\\n//   }\\n// }\",\"keccak256\":\"0xd4447ea2d06d084f969fceaff01283c6bde933a28245396355dda6c3f0311cc3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600380546001600160a01b0319163317905566b1a2bc2ec50000600455611ca48061003d6000396000f3fe6080604052600436106100fe5760003560e01c80638da5cb5b11610095578063b6b55f2511610064578063b6b55f25146102c4578063ba080eac146102d7578063c9c73a5f146102f7578063e1ab5a1614610317578063e65998eb1461032d57600080fd5b80638da5cb5b14610229578063a2f77bcc14610261578063a6f9dae11461028e578063b135bbb0146102ae57600080fd5b806352337242116100d1578063523372421461019857806359c309f4146101c5578063649677e1146101e557806383cfd07c1461020957600080fd5b80630df7160214610103578063117a5b90146101255780632e1a7d4d1461016557806332f692e114610178575b600080fd5b34801561010f57600080fd5b5061012361011e36600461144c565b61034d565b005b34801561013157600080fd5b5061014561014036600461144c565b6103c7565b60405161015c9b9a999897969594939291906114d7565b60405180910390f35b61012361017336600461144c565b610585565b34801561018457600080fd5b5061012361019336600461155e565b6106a9565b3480156101a457600080fd5b506101b86101b336600461144c565b61081b565b60405161015c919061158a565b3480156101d157600080fd5b506101236101e036600461160a565b6108c9565b3480156101f157600080fd5b506101fb60045481565b60405190815260200161015c565b34801561021557600080fd5b50610123610224366004611694565b610a3b565b34801561023557600080fd5b50600354610249906001600160a01b031681565b6040516001600160a01b03909116815260200161015c565b34801561026d57600080fd5b5061028161027c36600461144c565b610bf6565b60405161015c9190611736565b34801561029a57600080fd5b506101236102a9366004611842565b610ef0565b3480156102ba57600080fd5b506101fb60015481565b6101236102d236600461144c565b610f3c565b3480156102e357600080fd5b506101236102f23660046118f1565b611026565b34801561030357600080fd5b5061012361031236600461144c565b611148565b34801561032357600080fd5b506101fb60025481565b34801561033957600080fd5b5061012361034836600461160a565b61120d565b6003546001600160a01b031633146103805760405162461bcd60e51b815260040161037790611965565b60405180910390fd5b600081815481106103935761039361198d565b600091825260209091206006600f90920201015460ff1615156001146103bb576103bb6119a3565b6103c481610585565b50565b600081815481106103d757600080fd5b90600052602060002090600f02016000915090508060000180546103fa906119b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610426906119b9565b80156104735780601f1061044857610100808354040283529160200191610473565b820191906000526020600020905b81548152906001019060200180831161045657829003601f168201915b505050505090806001018054610488906119b9565b80601f01602080910402602001604051908101604052809291908181526020018280546104b4906119b9565b80156105015780601f106104d657610100808354040283529160200191610501565b820191906000526020600020905b8154815290600101906020018083116104e457829003601f168201915b50505060028401546003850154600686015460078701546008880154600989015460408051608081018252600a8c01548152600b8c01546001600160a01b039081166020830152600c8d015492820192909252600d8c01546060820152600e909b0154999a969995985060ff8086169850610100909504169592949193909291168b565b6003546001600160a01b031633146105af5760405162461bcd60e51b815260040161037790611965565b60008082815481106105c3576105c361198d565b90600052602060002090600f020160060160019054906101000a90046001600160a01b03166001600160a01b0316600083815481106106045761060461198d565b90600052602060002090600f02016008015460405160006040518083038185875af1925050503d8060008114610656576040519150601f19603f3d011682016040523d82523d6000602084013e61065b565b606091505b50509050806106a55760405162461bcd60e51b81526020600482015260166024820152754661696c656420746f2073656e64205265776172647360501b6044820152606401610377565b5050565b600083815481106106bc576106bc61198d565b600091825260209091206006600f90920201015460ff16156106e0576106e06119a3565b600083815481106106f3576106f361198d565b90600052602060002090600f020160020154600003610714576107146119a3565b6002546040805160808101825282815233602082015290810184905260608101839052600080548690811061074b5761074b61198d565b60009182526020808320600f929092029091016005018054600180820183559184529282902084516004909402019283558382015190830180546001600160a01b0319166001600160a01b0390921691909117905560408084015160028401556060808501516003909401939093558051858152339281019290925281018690529081018490527fa62d33f69feda965a6aa1d8a5664a19763e75ee295585d416ac17dac64ef9fe09060800160405180910390a16002805490600061080f83611a03565b91905055505050505050565b6060600082815481106108305761083061198d565b90600052602060002090600f0201600501805480602002602001604051908101604052809291908181526020016000905b828210156108be5760008481526020908190206040805160808101825260048602909201805483526001808201546001600160a01b0316848601526002820154928401929092526003015460608301529083529092019101610861565b505050509050919050565b6003546001600160a01b031633146108f35760405162461bcd60e51b815260040161037790611965565b600082815481106109065761090661198d565b600091825260209091206006600f90920201015460ff161561092a5761092a6119a3565b426000838154811061093e5761093e61198d565b90600052602060002090600f020160030154600084815481106109635761096361198d565b90600052602060002090600f02016002015461097f9190611a1c565b111561098d5761098d6119a3565b80600083815481106109a1576109a161198d565b90600052602060002090600f0201600a016000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506040820151816002015560608201518160030155905050600160008381548110610a1557610a1561198d565b60009182526020909120600f90910201600601805460ff19169115159190911790555050565b60008281548110610a4e57610a4e61198d565b60009182526020909120600e600f90920201015460ff161515600114610ac65760405162461bcd60e51b815260206004820152602760248201527f54686520747265617375726520636f6f7264696e617465206973206e6f742076604482015266195c9a599a595960ca1b6064820152608401610377565b6000808381548110610ada57610ada61198d565b90600052602060002090600f02016005018281548110610afc57610afc61198d565b90600052602060002090600402016002015490506000808481548110610b2457610b2461198d565b90600052602060002090600f02016005018381548110610b4657610b4661198d565b90600052602060002090600402016003015490506000808581548110610b6e57610b6e61198d565b90600052602060002090600f0201600a016002015490506000808681548110610b9957610b9961198d565b600091825260208220600d600f9092020101549150610bec6002610bbd8487611a35565b610bc79190611b2c565b6002610bd38689611a35565b610bdd9190611b2c565b610be79190611a1c565b61134e565b5050505050505050565b610bfe6113a7565b60008281548110610c1157610c1161198d565b90600052602060002090600f0201604051806101a0016040529081600082018054610c3b906119b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610c67906119b9565b8015610cb45780601f10610c8957610100808354040283529160200191610cb4565b820191906000526020600020905b815481529060010190602001808311610c9757829003601f168201915b50505050508152602001600182018054610ccd906119b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf9906119b9565b8015610d465780601f10610d1b57610100808354040283529160200191610d46565b820191906000526020600020905b815481529060010190602001808311610d2957829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020018280548015610dbc57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d9e575b5050505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b82821015610e475760008481526020908190206040805160808101825260048602909201805483526001808201546001600160a01b0316848601526002820154928401929092526003015460608301529083529092019101610dea565b50505090825250600682015460ff80821615156020808501919091526001600160a01b03610100909304831660408086019190915260078601546060808701919091526008870154608080880191909152600988015460a088015282519081018352600a8801548152600b88015490951692850192909252600c86015490840152600d8501549083015260c0830191909152600e90920154909116151560e09091015292915050565b6003546001600160a01b03163314610f1a5760405162461bcd60e51b815260040161037790611965565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600454341015610fa15760405162461bcd60e51b815260206004820152602a60248201527f54686520616d6f756e742073686f7564206265206d6f7265207468616e20656e6044820152693a3930b731b2a332b29760b11b6064820152608401610377565b60008181548110610fb457610fb461198d565b600091825260208083206004600f909302019190910180546001810182559083529082200180546001600160a01b03191633179055805434919083908110610ffe57610ffe61198d565b90600052602060002090600f0201600801600082825461101e9190611a1c565b909155505050565b6003546001600160a01b031633146110505760405162461bcd60e51b815260040161037790611965565b60018054600080549092018083558280529091908190839081106110765761107661198d565b60009182526020909120600f909102019050806110938782611b8c565b50600181016110a28682611b8c565b50426002820155600381018490556006810180546001600160a81b0319169055600019600782015560006008820181905560098201849055600e8201805460ff191690556040805160808101825282815260208101839052908101829052606001819052600a8201819055600b820180546001600160a01b0319169055600c8201819055600d8201819055600180549161113b83611a03565b9190505550505050505050565b6003546001600160a01b031633146111725760405162461bcd60e51b815260040161037790611965565b60005b60005481101561120757600081815481106111925761119261198d565b90600052602060002090600f0201600801546000146111ff5760405162461bcd60e51b815260206004820152602360248201527f546865726520617265207374696c6c20706c617965727320696e207468652067604482015262616d6560e81b6064820152608401610377565b600101611175565b50600455565b600082815481106112205761122061198d565b600091825260209091206006600f90920201015460ff1615156001146112885760405162461bcd60e51b815260206004820152601760248201527f5468652067616d652073686f756c64206265206f7665720000000000000000006044820152606401610377565b6000828154811061129b5761129b61198d565b60009182526020909120600e600f90920201015460ff16156113135760405162461bcd60e51b815260206004820152602b60248201527f54686520747265617375726520636f6f7264696e61746520697320616c72656160448201526a191e481d995c9a599a595960aa1b6064820152608401610377565b6001600083815481106113285761132861198d565b60009182526020909120600f90910201600e01805460ff19169115159190911790555050565b600080600261135e846001611a1c565b6113689190611c4c565b90508291505b818110156113a1579050806002816113868186611c4c565b6113909190611a1c565b61139a9190611c4c565b905061136e565b50919050565b604051806101a0016040528060608152602001606081526020016000815260200160008152602001606081526020016060815260200160001515815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200161143f60405180608001604052806000815260200160006001600160a01b0316815260200160008152602001600081525090565b8152600060209091015290565b60006020828403121561145e57600080fd5b5035919050565b6000815180845260005b8181101561148b5760208185018101518683018201520161146f565b506000602082860101526020601f19601f83011685010191505092915050565b805182526020808201516001600160a01b03169083015260408082015190830152606090810151910152565b60006101c08083526114eb8184018f611465565b905082810360208401526114ff818e611465565b9150508a6040830152896060830152881515608083015260018060a01b03881660a08301528660c08301528560e0830152846101008301526115456101208301856114ab565b8215156101a08301529c9b505050505050505050505050565b60008060006060848603121561157357600080fd5b505081359360208301359350604090920135919050565b6020808252825182820181905260009190848201906040850190845b818110156115cc576115b98385516114ab565b92840192608092909201916001016115a6565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461160557600080fd5b919050565b60008082840360a081121561161e57600080fd5b833592506080601f198201121561163457600080fd5b506040516080810181811067ffffffffffffffff82111715611658576116586115d8565b806040525060208401358152611670604085016115ee565b60208201526060840135604082015260808401356060820152809150509250929050565b600080604083850312156116a757600080fd5b50508035926020909101359150565b60008151808452602080850194506020840160005b838110156116f05781516001600160a01b0316875295820195908201906001016116cb565b509495945050505050565b60008151808452602080850194506020840160005b838110156116f0576117238783516114ab565b6080969096019590820190600101611710565b6020815260008251610200806020850152611755610220850183611465565b91506020850151601f19808685030160408701526117738483611465565b9350604087015160608701526060870151608087015260808701519150808685030160a08701526117a484836116b6565b935060a08701519150808685030160c0870152506117c283826116fb565b92505060c08501516117d860e086018215159052565b5060e08501516101006117f5818701836001600160a01b03169052565b8601516101208681019190915286015161014080870191909152860151610160808701919091528601519050610180611830818701836114ab565b90950151151593019290925250919050565b60006020828403121561185457600080fd5b61185d826115ee565b9392505050565b600082601f83011261187557600080fd5b813567ffffffffffffffff80821115611890576118906115d8565b604051601f8301601f19908116603f011681019082821181831017156118b8576118b86115d8565b816040528381528660208588010111156118d157600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561190757600080fd5b843567ffffffffffffffff8082111561191f57600080fd5b61192b88838901611864565b9550602087013591508082111561194157600080fd5b5061194e87828801611864565b949794965050505060408301359260600135919050565b6020808252600e908201526d1b9bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052600160045260246000fd5b600181811c908216806119cd57607f821691505b6020821081036113a157634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611a1557611a156119ed565b5060010190565b80820180821115611a2f57611a2f6119ed565b92915050565b81810381811115611a2f57611a2f6119ed565b600181815b80851115611a83578160001904821115611a6957611a696119ed565b80851615611a7657918102915b93841c9390800290611a4d565b509250929050565b600082611a9a57506001611a2f565b81611aa757506000611a2f565b8160018114611abd5760028114611ac757611ae3565b6001915050611a2f565b60ff841115611ad857611ad86119ed565b50506001821b611a2f565b5060208310610133831016604e8410600b8410161715611b06575081810a611a2f565b611b108383611a48565b8060001904821115611b2457611b246119ed565b029392505050565b600061185d60ff841683611a8b565b601f821115611b87576000816000526020600020601f850160051c81016020861015611b645750805b601f850160051c820191505b81811015611b8357828155600101611b70565b5050505b505050565b815167ffffffffffffffff811115611ba657611ba66115d8565b611bba81611bb484546119b9565b84611b3b565b602080601f831160018114611bef5760008415611bd75750858301515b600019600386901b1c1916600185901b178555611b83565b600085815260208120601f198616915b82811015611c1e57888601518255948401946001909101908401611bff565b5085821015611c3c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082611c6957634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212200fba5ad7b3590f7171d5fa970f2eaefc423c067bb7c99de51fec29b72e9c0b7864736f6c63430008180033",
  "deployedBytecode": "0x6080604052600436106100fe5760003560e01c80638da5cb5b11610095578063b6b55f2511610064578063b6b55f25146102c4578063ba080eac146102d7578063c9c73a5f146102f7578063e1ab5a1614610317578063e65998eb1461032d57600080fd5b80638da5cb5b14610229578063a2f77bcc14610261578063a6f9dae11461028e578063b135bbb0146102ae57600080fd5b806352337242116100d1578063523372421461019857806359c309f4146101c5578063649677e1146101e557806383cfd07c1461020957600080fd5b80630df7160214610103578063117a5b90146101255780632e1a7d4d1461016557806332f692e114610178575b600080fd5b34801561010f57600080fd5b5061012361011e36600461144c565b61034d565b005b34801561013157600080fd5b5061014561014036600461144c565b6103c7565b60405161015c9b9a999897969594939291906114d7565b60405180910390f35b61012361017336600461144c565b610585565b34801561018457600080fd5b5061012361019336600461155e565b6106a9565b3480156101a457600080fd5b506101b86101b336600461144c565b61081b565b60405161015c919061158a565b3480156101d157600080fd5b506101236101e036600461160a565b6108c9565b3480156101f157600080fd5b506101fb60045481565b60405190815260200161015c565b34801561021557600080fd5b50610123610224366004611694565b610a3b565b34801561023557600080fd5b50600354610249906001600160a01b031681565b6040516001600160a01b03909116815260200161015c565b34801561026d57600080fd5b5061028161027c36600461144c565b610bf6565b60405161015c9190611736565b34801561029a57600080fd5b506101236102a9366004611842565b610ef0565b3480156102ba57600080fd5b506101fb60015481565b6101236102d236600461144c565b610f3c565b3480156102e357600080fd5b506101236102f23660046118f1565b611026565b34801561030357600080fd5b5061012361031236600461144c565b611148565b34801561032357600080fd5b506101fb60025481565b34801561033957600080fd5b5061012361034836600461160a565b61120d565b6003546001600160a01b031633146103805760405162461bcd60e51b815260040161037790611965565b60405180910390fd5b600081815481106103935761039361198d565b600091825260209091206006600f90920201015460ff1615156001146103bb576103bb6119a3565b6103c481610585565b50565b600081815481106103d757600080fd5b90600052602060002090600f02016000915090508060000180546103fa906119b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610426906119b9565b80156104735780601f1061044857610100808354040283529160200191610473565b820191906000526020600020905b81548152906001019060200180831161045657829003601f168201915b505050505090806001018054610488906119b9565b80601f01602080910402602001604051908101604052809291908181526020018280546104b4906119b9565b80156105015780601f106104d657610100808354040283529160200191610501565b820191906000526020600020905b8154815290600101906020018083116104e457829003601f168201915b50505060028401546003850154600686015460078701546008880154600989015460408051608081018252600a8c01548152600b8c01546001600160a01b039081166020830152600c8d015492820192909252600d8c01546060820152600e909b0154999a969995985060ff8086169850610100909504169592949193909291168b565b6003546001600160a01b031633146105af5760405162461bcd60e51b815260040161037790611965565b60008082815481106105c3576105c361198d565b90600052602060002090600f020160060160019054906101000a90046001600160a01b03166001600160a01b0316600083815481106106045761060461198d565b90600052602060002090600f02016008015460405160006040518083038185875af1925050503d8060008114610656576040519150601f19603f3d011682016040523d82523d6000602084013e61065b565b606091505b50509050806106a55760405162461bcd60e51b81526020600482015260166024820152754661696c656420746f2073656e64205265776172647360501b6044820152606401610377565b5050565b600083815481106106bc576106bc61198d565b600091825260209091206006600f90920201015460ff16156106e0576106e06119a3565b600083815481106106f3576106f361198d565b90600052602060002090600f020160020154600003610714576107146119a3565b6002546040805160808101825282815233602082015290810184905260608101839052600080548690811061074b5761074b61198d565b60009182526020808320600f929092029091016005018054600180820183559184529282902084516004909402019283558382015190830180546001600160a01b0319166001600160a01b0390921691909117905560408084015160028401556060808501516003909401939093558051858152339281019290925281018690529081018490527fa62d33f69feda965a6aa1d8a5664a19763e75ee295585d416ac17dac64ef9fe09060800160405180910390a16002805490600061080f83611a03565b91905055505050505050565b6060600082815481106108305761083061198d565b90600052602060002090600f0201600501805480602002602001604051908101604052809291908181526020016000905b828210156108be5760008481526020908190206040805160808101825260048602909201805483526001808201546001600160a01b0316848601526002820154928401929092526003015460608301529083529092019101610861565b505050509050919050565b6003546001600160a01b031633146108f35760405162461bcd60e51b815260040161037790611965565b600082815481106109065761090661198d565b600091825260209091206006600f90920201015460ff161561092a5761092a6119a3565b426000838154811061093e5761093e61198d565b90600052602060002090600f020160030154600084815481106109635761096361198d565b90600052602060002090600f02016002015461097f9190611a1c565b111561098d5761098d6119a3565b80600083815481106109a1576109a161198d565b90600052602060002090600f0201600a016000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506040820151816002015560608201518160030155905050600160008381548110610a1557610a1561198d565b60009182526020909120600f90910201600601805460ff19169115159190911790555050565b60008281548110610a4e57610a4e61198d565b60009182526020909120600e600f90920201015460ff161515600114610ac65760405162461bcd60e51b815260206004820152602760248201527f54686520747265617375726520636f6f7264696e617465206973206e6f742076604482015266195c9a599a595960ca1b6064820152608401610377565b6000808381548110610ada57610ada61198d565b90600052602060002090600f02016005018281548110610afc57610afc61198d565b90600052602060002090600402016002015490506000808481548110610b2457610b2461198d565b90600052602060002090600f02016005018381548110610b4657610b4661198d565b90600052602060002090600402016003015490506000808581548110610b6e57610b6e61198d565b90600052602060002090600f0201600a016002015490506000808681548110610b9957610b9961198d565b600091825260208220600d600f9092020101549150610bec6002610bbd8487611a35565b610bc79190611b2c565b6002610bd38689611a35565b610bdd9190611b2c565b610be79190611a1c565b61134e565b5050505050505050565b610bfe6113a7565b60008281548110610c1157610c1161198d565b90600052602060002090600f0201604051806101a0016040529081600082018054610c3b906119b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610c67906119b9565b8015610cb45780601f10610c8957610100808354040283529160200191610cb4565b820191906000526020600020905b815481529060010190602001808311610c9757829003601f168201915b50505050508152602001600182018054610ccd906119b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf9906119b9565b8015610d465780601f10610d1b57610100808354040283529160200191610d46565b820191906000526020600020905b815481529060010190602001808311610d2957829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020018280548015610dbc57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d9e575b5050505050815260200160058201805480602002602001604051908101604052809291908181526020016000905b82821015610e475760008481526020908190206040805160808101825260048602909201805483526001808201546001600160a01b0316848601526002820154928401929092526003015460608301529083529092019101610dea565b50505090825250600682015460ff80821615156020808501919091526001600160a01b03610100909304831660408086019190915260078601546060808701919091526008870154608080880191909152600988015460a088015282519081018352600a8801548152600b88015490951692850192909252600c86015490840152600d8501549083015260c0830191909152600e90920154909116151560e09091015292915050565b6003546001600160a01b03163314610f1a5760405162461bcd60e51b815260040161037790611965565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600454341015610fa15760405162461bcd60e51b815260206004820152602a60248201527f54686520616d6f756e742073686f7564206265206d6f7265207468616e20656e6044820152693a3930b731b2a332b29760b11b6064820152608401610377565b60008181548110610fb457610fb461198d565b600091825260208083206004600f909302019190910180546001810182559083529082200180546001600160a01b03191633179055805434919083908110610ffe57610ffe61198d565b90600052602060002090600f0201600801600082825461101e9190611a1c565b909155505050565b6003546001600160a01b031633146110505760405162461bcd60e51b815260040161037790611965565b60018054600080549092018083558280529091908190839081106110765761107661198d565b60009182526020909120600f909102019050806110938782611b8c565b50600181016110a28682611b8c565b50426002820155600381018490556006810180546001600160a81b0319169055600019600782015560006008820181905560098201849055600e8201805460ff191690556040805160808101825282815260208101839052908101829052606001819052600a8201819055600b820180546001600160a01b0319169055600c8201819055600d8201819055600180549161113b83611a03565b9190505550505050505050565b6003546001600160a01b031633146111725760405162461bcd60e51b815260040161037790611965565b60005b60005481101561120757600081815481106111925761119261198d565b90600052602060002090600f0201600801546000146111ff5760405162461bcd60e51b815260206004820152602360248201527f546865726520617265207374696c6c20706c617965727320696e207468652067604482015262616d6560e81b6064820152608401610377565b600101611175565b50600455565b600082815481106112205761122061198d565b600091825260209091206006600f90920201015460ff1615156001146112885760405162461bcd60e51b815260206004820152601760248201527f5468652067616d652073686f756c64206265206f7665720000000000000000006044820152606401610377565b6000828154811061129b5761129b61198d565b60009182526020909120600e600f90920201015460ff16156113135760405162461bcd60e51b815260206004820152602b60248201527f54686520747265617375726520636f6f7264696e61746520697320616c72656160448201526a191e481d995c9a599a595960aa1b6064820152608401610377565b6001600083815481106113285761132861198d565b60009182526020909120600f90910201600e01805460ff19169115159190911790555050565b600080600261135e846001611a1c565b6113689190611c4c565b90508291505b818110156113a1579050806002816113868186611c4c565b6113909190611a1c565b61139a9190611c4c565b905061136e565b50919050565b604051806101a0016040528060608152602001606081526020016000815260200160008152602001606081526020016060815260200160001515815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200161143f60405180608001604052806000815260200160006001600160a01b0316815260200160008152602001600081525090565b8152600060209091015290565b60006020828403121561145e57600080fd5b5035919050565b6000815180845260005b8181101561148b5760208185018101518683018201520161146f565b506000602082860101526020601f19601f83011685010191505092915050565b805182526020808201516001600160a01b03169083015260408082015190830152606090810151910152565b60006101c08083526114eb8184018f611465565b905082810360208401526114ff818e611465565b9150508a6040830152896060830152881515608083015260018060a01b03881660a08301528660c08301528560e0830152846101008301526115456101208301856114ab565b8215156101a08301529c9b505050505050505050505050565b60008060006060848603121561157357600080fd5b505081359360208301359350604090920135919050565b6020808252825182820181905260009190848201906040850190845b818110156115cc576115b98385516114ab565b92840192608092909201916001016115a6565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461160557600080fd5b919050565b60008082840360a081121561161e57600080fd5b833592506080601f198201121561163457600080fd5b506040516080810181811067ffffffffffffffff82111715611658576116586115d8565b806040525060208401358152611670604085016115ee565b60208201526060840135604082015260808401356060820152809150509250929050565b600080604083850312156116a757600080fd5b50508035926020909101359150565b60008151808452602080850194506020840160005b838110156116f05781516001600160a01b0316875295820195908201906001016116cb565b509495945050505050565b60008151808452602080850194506020840160005b838110156116f0576117238783516114ab565b6080969096019590820190600101611710565b6020815260008251610200806020850152611755610220850183611465565b91506020850151601f19808685030160408701526117738483611465565b9350604087015160608701526060870151608087015260808701519150808685030160a08701526117a484836116b6565b935060a08701519150808685030160c0870152506117c283826116fb565b92505060c08501516117d860e086018215159052565b5060e08501516101006117f5818701836001600160a01b03169052565b8601516101208681019190915286015161014080870191909152860151610160808701919091528601519050610180611830818701836114ab565b90950151151593019290925250919050565b60006020828403121561185457600080fd5b61185d826115ee565b9392505050565b600082601f83011261187557600080fd5b813567ffffffffffffffff80821115611890576118906115d8565b604051601f8301601f19908116603f011681019082821181831017156118b8576118b86115d8565b816040528381528660208588010111156118d157600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561190757600080fd5b843567ffffffffffffffff8082111561191f57600080fd5b61192b88838901611864565b9550602087013591508082111561194157600080fd5b5061194e87828801611864565b949794965050505060408301359260600135919050565b6020808252600e908201526d1b9bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052600160045260246000fd5b600181811c908216806119cd57607f821691505b6020821081036113a157634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611a1557611a156119ed565b5060010190565b80820180821115611a2f57611a2f6119ed565b92915050565b81810381811115611a2f57611a2f6119ed565b600181815b80851115611a83578160001904821115611a6957611a696119ed565b80851615611a7657918102915b93841c9390800290611a4d565b509250929050565b600082611a9a57506001611a2f565b81611aa757506000611a2f565b8160018114611abd5760028114611ac757611ae3565b6001915050611a2f565b60ff841115611ad857611ad86119ed565b50506001821b611a2f565b5060208310610133831016604e8410600b8410161715611b06575081810a611a2f565b611b108383611a48565b8060001904821115611b2457611b246119ed565b029392505050565b600061185d60ff841683611a8b565b601f821115611b87576000816000526020600020601f850160051c81016020861015611b645750805b601f850160051c820191505b81811015611b8357828155600101611b70565b5050505b505050565b815167ffffffffffffffff811115611ba657611ba66115d8565b611bba81611bb484546119b9565b84611b3b565b602080601f831160018114611bef5760008415611bd75750858301515b600019600386901b1c1916600185901b178555611b83565b600085815260208120601f198616915b82811015611c1e57888601518255948401946001909101908401611bff565b5085821015611c3c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082611c6957634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212200fba5ad7b3590f7171d5fa970f2eaefc423c067bb7c99de51fec29b72e9c0b7864736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 46,
        "contract": "contracts/Coordinate.sol:zkTreasure",
        "label": "games",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(Game)42_storage)dyn_storage"
      },
      {
        "astId": 48,
        "contract": "contracts/Coordinate.sol:zkTreasure",
        "label": "nextGameId",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 50,
        "contract": "contracts/Coordinate.sol:zkTreasure",
        "label": "nextCoordinateId",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 52,
        "contract": "contracts/Coordinate.sol:zkTreasure",
        "label": "owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 54,
        "contract": "contracts/Coordinate.sol:zkTreasure",
        "label": "entranceFee",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Coordinate)11_storage)dyn_storage": {
        "base": "t_struct(Coordinate)11_storage",
        "encoding": "dynamic_array",
        "label": "struct zkTreasure.Coordinate[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Game)42_storage)dyn_storage": {
        "base": "t_struct(Game)42_storage",
        "encoding": "dynamic_array",
        "label": "struct zkTreasure.Game[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Coordinate)11_storage": {
        "encoding": "inplace",
        "label": "struct zkTreasure.Coordinate",
        "members": [
          {
            "astId": 4,
            "contract": "contracts/Coordinate.sol:zkTreasure",
            "label": "coordinateId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 6,
            "contract": "contracts/Coordinate.sol:zkTreasure",
            "label": "player",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 8,
            "contract": "contracts/Coordinate.sol:zkTreasure",
            "label": "x",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 10,
            "contract": "contracts/Coordinate.sol:zkTreasure",
            "label": "y",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Game)42_storage": {
        "encoding": "inplace",
        "label": "struct zkTreasure.Game",
        "members": [
          {
            "astId": 13,
            "contract": "contracts/Coordinate.sol:zkTreasure",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 15,
            "contract": "contracts/Coordinate.sol:zkTreasure",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 17,
            "contract": "contracts/Coordinate.sol:zkTreasure",
            "label": "startAt",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 19,
            "contract": "contracts/Coordinate.sol:zkTreasure",
            "label": "duration",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 22,
            "contract": "contracts/Coordinate.sol:zkTreasure",
            "label": "players",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 26,
            "contract": "contracts/Coordinate.sol:zkTreasure",
            "label": "coordinates",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_struct(Coordinate)11_storage)dyn_storage"
          },
          {
            "astId": 28,
            "contract": "contracts/Coordinate.sol:zkTreasure",
            "label": "isOver",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 30,
            "contract": "contracts/Coordinate.sol:zkTreasure",
            "label": "closestPlayer",
            "offset": 1,
            "slot": "6",
            "type": "t_address"
          },
          {
            "astId": 32,
            "contract": "contracts/Coordinate.sol:zkTreasure",
            "label": "closestDistance",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 34,
            "contract": "contracts/Coordinate.sol:zkTreasure",
            "label": "totalDeposit",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 36,
            "contract": "contracts/Coordinate.sol:zkTreasure",
            "label": "treasureHash",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 39,
            "contract": "contracts/Coordinate.sol:zkTreasure",
            "label": "treasureCoordinate",
            "offset": 0,
            "slot": "10",
            "type": "t_struct(Coordinate)11_storage"
          },
          {
            "astId": 41,
            "contract": "contracts/Coordinate.sol:zkTreasure",
            "label": "treasureCoordinateVerified",
            "offset": 0,
            "slot": "14",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "480"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}