/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    zkTreasure: {
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_newFee",
              type: "uint256",
            },
          ],
          name: "changeEntranceFee",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_newOwner",
              type: "address",
            },
          ],
          name: "changeOwner",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "coordinates",
          outputs: [
            {
              internalType: "uint256",
              name: "coordinateId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "player",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "x",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "y",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_gameId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_x",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_y",
              type: "uint256",
            },
          ],
          name: "createCoordinate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string",
              name: "_description",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_duration",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "_treasureHash",
              type: "bytes32",
            },
          ],
          name: "createGame",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_gameId",
              type: "uint256",
            },
          ],
          name: "deposit",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "entranceFee",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_gameId",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "coordinateId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "player",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct zkTreasure.Coordinate",
              name: "_treasureCoordinate",
              type: "tuple",
            },
          ],
          name: "finishGame",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_gameId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "coordinateId",
              type: "uint256",
            },
          ],
          name: "fraudProofCheck",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "games",
          outputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "startAt",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "duration",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isOver",
              type: "bool",
            },
            {
              internalType: "address",
              name: "closestPlayer",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "closestDistance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalDeposit",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "treasureHash",
              type: "bytes32",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "coordinateId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "player",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct zkTreasure.Coordinate",
              name: "treasureCoordinate",
              type: "tuple",
            },
            {
              internalType: "bool",
              name: "treasureCoordinateVerified",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_gameId",
              type: "uint256",
            },
          ],
          name: "getCoordinate",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "coordinateId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "player",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct zkTreasure.Coordinate[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_gameId",
              type: "uint256",
            },
          ],
          name: "getGame",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "description",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "startAt",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "duration",
                  type: "uint256",
                },
                {
                  internalType: "address[]",
                  name: "players",
                  type: "address[]",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "coordinateId",
                      type: "uint256",
                    },
                    {
                      internalType: "address",
                      name: "player",
                      type: "address",
                    },
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct zkTreasure.Coordinate[]",
                  name: "coordinates",
                  type: "tuple[]",
                },
                {
                  internalType: "bool",
                  name: "isOver",
                  type: "bool",
                },
                {
                  internalType: "address",
                  name: "closestPlayer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "closestDistance",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalDeposit",
                  type: "uint256",
                },
                {
                  internalType: "bytes32",
                  name: "treasureHash",
                  type: "bytes32",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "coordinateId",
                      type: "uint256",
                    },
                    {
                      internalType: "address",
                      name: "player",
                      type: "address",
                    },
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct zkTreasure.Coordinate",
                  name: "treasureCoordinate",
                  type: "tuple",
                },
                {
                  internalType: "bool",
                  name: "treasureCoordinateVerified",
                  type: "bool",
                },
              ],
              internalType: "struct zkTreasure.Game",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nextCoordinateId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nextGameId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_gameId",
              type: "uint256",
            },
          ],
          name: "setWinner",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_gameId",
              type: "uint256",
            },
          ],
          name: "startGame",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_gameId",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "coordinateId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "player",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct zkTreasure.Coordinate",
              name: "_treasureCoordinate",
              type: "tuple",
            },
          ],
          name: "verifyTreasureCoordinate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_gameId",
              type: "uint256",
            },
          ],
          name: "withdraw",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  11155111: {
    zkTreasure: {
      address: "0x97A8fd9494f45AeDcD17a705a10Ac703c4e4377D",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_newFee",
              type: "uint256",
            },
          ],
          name: "changeEntranceFee",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_newOwner",
              type: "address",
            },
          ],
          name: "changeOwner",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "coordinates",
          outputs: [
            {
              internalType: "uint256",
              name: "coordinateId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "player",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "x",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "y",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_gameId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_x",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_y",
              type: "uint256",
            },
          ],
          name: "createCoordinate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string",
              name: "_description",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_duration",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "_treasureHash",
              type: "bytes32",
            },
          ],
          name: "createGame",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_gameId",
              type: "uint256",
            },
          ],
          name: "deposit",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "entranceFee",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_gameId",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "coordinateId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "player",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct zkTreasure.Coordinate",
              name: "_treasureCoordinate",
              type: "tuple",
            },
          ],
          name: "finishGame",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_gameId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "coordinateId",
              type: "uint256",
            },
          ],
          name: "fraudProofCheck",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "games",
          outputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "startAt",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "duration",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isOver",
              type: "bool",
            },
            {
              internalType: "address",
              name: "closestPlayer",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "closestDistance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalDeposit",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "treasureHash",
              type: "bytes32",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "coordinateId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "player",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct zkTreasure.Coordinate",
              name: "treasureCoordinate",
              type: "tuple",
            },
            {
              internalType: "bool",
              name: "treasureCoordinateVerified",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_gameId",
              type: "uint256",
            },
          ],
          name: "getCoordinate",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "coordinateId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "player",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct zkTreasure.Coordinate[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_gameId",
              type: "uint256",
            },
          ],
          name: "getGame",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "description",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "startAt",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "duration",
                  type: "uint256",
                },
                {
                  internalType: "address[]",
                  name: "players",
                  type: "address[]",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "coordinateId",
                      type: "uint256",
                    },
                    {
                      internalType: "address",
                      name: "player",
                      type: "address",
                    },
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct zkTreasure.Coordinate[]",
                  name: "coordinates",
                  type: "tuple[]",
                },
                {
                  internalType: "bool",
                  name: "isOver",
                  type: "bool",
                },
                {
                  internalType: "address",
                  name: "closestPlayer",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "closestDistance",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalDeposit",
                  type: "uint256",
                },
                {
                  internalType: "bytes32",
                  name: "treasureHash",
                  type: "bytes32",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "coordinateId",
                      type: "uint256",
                    },
                    {
                      internalType: "address",
                      name: "player",
                      type: "address",
                    },
                    {
                      internalType: "uint256",
                      name: "x",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "y",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct zkTreasure.Coordinate",
                  name: "treasureCoordinate",
                  type: "tuple",
                },
                {
                  internalType: "bool",
                  name: "treasureCoordinateVerified",
                  type: "bool",
                },
              ],
              internalType: "struct zkTreasure.Game",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nextCoordinateId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nextGameId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_gameId",
              type: "uint256",
            },
          ],
          name: "setWinner",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_gameId",
              type: "uint256",
            },
          ],
          name: "startGame",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_gameId",
              type: "uint256",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "coordinateId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "player",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "x",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "y",
                  type: "uint256",
                },
              ],
              internalType: "struct zkTreasure.Coordinate",
              name: "_treasureCoordinate",
              type: "tuple",
            },
          ],
          name: "verifyTreasureCoordinate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_gameId",
              type: "uint256",
            },
          ],
          name: "withdraw",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
